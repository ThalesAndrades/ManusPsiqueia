---
name: 🍎 iOS CI/CD Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

env:
  XCODE_VERSION: '15.1'
  IOS_SIMULATOR: 'iPhone 15 Pro'
  IOS_VERSION: '17.2'

jobs:
  build-and-test:
    name: 🧪 Build & Test
    runs-on: macos-14
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🍎 Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: 📦 Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ~/.swiftpm
          key: ${{ runner.os }}-xcode-${{ hashFiles('**/*.xcodeproj', '**/*.swift') }}
          restore-keys: |
            ${{ runner.os }}-xcode-
      
      - name: 🔧 Resolve Dependencies
        run: |
          xcodebuild -resolvePackageDependencies \
            -project ManusPsiqueia.xcodeproj \
            -scheme ManusPsiqueia
      
      - name: 🏗️ Build Project
        run: |
          xcodebuild clean build \
            -project ManusPsiqueia.xcodeproj \
            -scheme ManusPsiqueia \
            -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}' \
            -configuration Debug \
            CODE_SIGNING_ALLOWED=NO
      
      - name: 🧪 Run Tests
        run: |
          xcodebuild test \
            -project ManusPsiqueia.xcodeproj \
            -scheme ManusPsiqueia \
            -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR }},OS=${{ env.IOS_VERSION }}' \
            -configuration Debug \
            CODE_SIGNING_ALLOWED=NO
        continue-on-error: true

  code-quality:
    name: 🔍 Code Quality
    runs-on: macos-14
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🍎 Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: 🔧 Install SwiftLint
        run: |
          brew install swiftlint
          swiftlint version
      
      - name: 🔍 Run SwiftLint
        run: |
          swiftlint lint --reporter github-actions-logging
        continue-on-error: true

  security-scan:
    name: 🔒 Security Scan
    runs-on: macos-14
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🔍 Basic Security Checks
        run: |
          echo "🔍 Running basic security checks..."
          
          # Check for hardcoded API keys
          echo "Checking for hardcoded API keys..."
          if grep -r "sk_live\|pk_live\|sk_test\|pk_test" . --exclude-dir=.git; then
            echo "⚠️ WARNING: Potential API keys found"
          else
            echo "✅ No hardcoded API keys found"
          fi
          
          # Check for insecure HTTP URLs
          echo "Checking for insecure URLs..."
          if grep -r "http://" . --exclude-dir=.git --exclude="*.md" | grep -v localhost; then
            echo "⚠️ WARNING: Insecure HTTP URLs found"
          else
            echo "✅ No insecure HTTP URLs found"
          fi
          
          echo "🔒 Basic security scan completed"